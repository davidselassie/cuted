#!/usr/bin/env ruby

# David Selassie
# April 28, 2011

# USAGE: cute CMD
# Enqueues a command to be executed by cuted.

require 'trollop'
require 'drb'

config = {'uri' => 'drbunix:///tmp/cuted.sock'}
if File.exists?(File.expand_path('~/.cuterc')) then
  config.merge!(ParseConfig.new(File.expand_path('~/.cuterc')).params)
end

options = Trollop::options do
  opt :dir, 'run command in a dir other than the CWD', :default => Dir.pwd
  opt :weight, 'weight of this command', :default => 1
  opt :priority, 'priority of this command', :default => 0
  opt :log, 'custom log file to use'
  opt :prowl_key, 'custom Prowl key to notify'
  opt :uri, 'server to submit commands to', :type => :string,
    :default => ENV['cuted_uri'] || config['uri']
end
Trollop::die 'cute: You must specify a command' if ARGV.length < 1

# Join together the rest of the arguments as the command.
cmd = ARGV.join(' ')

begin
  DRb.start_service
  queue = DRbObject.new(nil, options[:uri])

  # Get the real command stored in the queue.
  cmd = queue.push_cmd(cmd)

  # Set up attributes.
  cmd.dir = options[:dir]
  cmd.priority = options[:priority]
  cmd.weight = options[:weight]
  # Set a custom Prowl key if one is specified.
  cmd.prowl_key = options[:prowl_key] if options[:prowl_key]
  # Set a custom log if one is specified and it isn't empty.
  cmd.log = options[:log] if options[:log] and options[:log].size > 0

  # Try to run tasks.
  queue.pop_run

  puts "Command '#{cmd}' submitted"
rescue DRb::DRbConnError => err
  puts "Could not connect to '#{options[:server]}'"

  exit 1
end
